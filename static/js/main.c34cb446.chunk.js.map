{"version":3,"sources":["utils.js","WebAPI.js","redux/reducers/userReducer.js","components/pages/LoginPage/LoginPage.js","components/pages/HomePage/HomePage.js","redux/reducers/postReducer.js","components/pages/PostPage/PostPage.js","components/pages/AddPage/AddPage.js","components/pages/AboutPage/AboutPage.js","components/pages/RegisterPage/RegisterPage.js","components/Header/Header.js","components/App/App.js","redux/store.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getPostsByPage","page","fetch","then","res","json","getMe","headers","authorization","userReducer","createSlice","name","initialState","user","reducers","setUser","state","action","payload","actions","ErrorMessage","styled","div","LoginPage","dispatch","useDispatch","useState","username","setUsername","password","setPassword","errorMessage","setErrorMessage","history","useHistory","onSubmit","e","preventDefault","method","body","JSON","stringify","login","data","ok","message","response","toString","push","value","onChange","target","type","Root","PostContainer","PostTitle","Link","PostDate","Paginator","PageButton","button","props","$active","Post","post","to","id","title","Date","createdAt","toLocaleString","HomePage","totalPages","setTotalPages","setPage","curretPosts","setCurretPosts","useEffect","posts","pages","length","Math","ceil","Array","from","v","i","map","p","onClick","handlePageChange","postReducer","isLoadingPost","newPostResponse","editPostResponse","setIsLoadingPost","setPost","setNewPostResponse","getPost","getPostAPI","newPost","addPost","editPost","editTitle","editBody","editPostAPI","deletePost","header","deletePostAPI","PostPage","useParams","useSelector","store","isEditing","setIsEditing","setEditTitle","setEditBody","toggleEditArea","deleteRes","handleDeletePost","userId","AddPage","postTitle","setPostTitle","postBody","setPostBody","AboutPage","nickname","setNickname","register","HeaderContainer","Brand","NavbarList","Nav","LogoutNav","LeftContainer","Header","location","useLocation","pathname","App","exact","path","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"yKAAMA,EAAa,QAENC,EAAe,SAACC,GAC3BC,aAAaC,QAAQJ,EAAYE,IAGtBG,EAAe,WAC1B,OAAOF,aAAaG,QAAQN,ICNxBO,EAAW,qCAUJC,EAAiB,SAACC,GAC7B,OAAOC,MAAM,GAAD,OACPH,EADO,oDAC6CE,EAD7C,mBATO,IAWjBE,MAAK,SAACC,GAAD,OAASA,EAAIC,WAkCTC,EAAQ,WACnB,IAAMZ,EAAQG,IACd,OAAOK,MAAM,GAAD,OAAIH,EAAJ,OAAmB,CAC7BQ,QAAS,CACPC,cAAc,UAAD,OAAYd,MAE1BS,MAAK,SAACC,GAAD,OAASA,EAAIC,W,sBChDVI,EAAcC,YAAY,CACrCC,KAAM,OACNC,aANmB,CACnBC,KAAM,IAMNC,SAAU,CACRC,QAAS,SAACC,EAAOC,GACfD,EAAMH,KAAOI,EAAOC,YAMXH,EAAYN,EAAYU,QAAxBJ,QAEAN,IAAf,Q,OCXMW,EAAeC,IAAOC,IAAV,2CAGH,SAASC,IACtB,IAAMC,EAAWC,cACjB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwCJ,qBAAxC,mBAAOK,EAAP,KAAqBC,EAArB,KACMC,EAAUC,cAqBhB,OACE,uBAAMC,SApBa,SAACC,GACpBA,EAAEC,iBACFL,EAAgB,MFeC,SAACL,EAAUE,GAC9B,OAAO3B,MAAM,GAAD,OAAIH,EAAJ,UAAsB,CAChCuC,OAAQ,OACR/B,QAAS,CACP,eAAgB,oBAElBgC,KAAMC,KAAKC,UAAU,CACnBd,WACAE,eAED1B,MAAK,SAACC,GAAD,OAASA,EAAIC,UExBnBqC,CAAMf,EAAUE,GAAU1B,MAAK,SAACwC,GAC9B,GAAgB,IAAZA,EAAKC,GACP,OAAOZ,EAAgBW,EAAKE,SAE9BpD,EAAakD,EAAKjD,OAElBY,IAAQH,MAAK,SAAC2C,GACZ,GAAoB,IAAhBA,EAASF,GAEX,OADAnD,EAAa,MACNuC,EAAgBc,EAASC,YAElCvB,EAAST,EAAQ+B,EAASH,OAC1BV,EAAQe,KAAK,YAKjB,UACE,4CACY,IACV,uBAAOC,MAAOtB,EAAUuB,SAAU,SAACd,GAAD,OAAOR,EAAYQ,EAAEe,OAAOF,aAEhE,4CACY,IACV,uBACEG,KAAK,WACLH,MAAOpB,EACPqB,SAAU,SAACd,GAAD,OAAON,EAAYM,EAAEe,OAAOF,aAG1C,kDACClB,GAAgB,cAACX,EAAD,UAAeW,O,wBC9ChCsB,EAAOhC,IAAOC,IAAV,2CAIJgC,EAAgBjC,IAAOC,IAAV,+KAObiC,EAAYlC,YAAOmC,IAAPnC,CAAH,8GAOToC,EAAWpC,IAAOC,IAAV,0DAIRoC,EAAYrC,IAAOC,IAAV,kFAMTqC,EAAatC,IAAOuC,OAAV,qQAWZ,SAACC,GAAD,OACAA,EAAMC,SAAN,sEAOJ,SAASC,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACd,OACE,eAACV,EAAD,WACE,cAACC,EAAD,CAAWU,GAAE,iBAAYD,EAAKE,IAA9B,SAAqCF,EAAKG,QAC1C,cAACV,EAAD,UAAW,IAAIW,KAAKJ,EAAKK,WAAWC,sBAS3B,SAASC,IACtB,MAAoC7C,mBAAS,IAA7C,mBAAO8C,EAAP,KAAmBC,EAAnB,KACA,EAAwB/C,mBAAS,GAAjC,mBAAOzB,EAAP,KAAayE,EAAb,KACA,EAAsChD,mBAAS,IAA/C,mBAAOiD,EAAP,KAAoBC,EAApB,KAsBA,OAbAC,qBAAU,WACR7E,EAAeC,GAAME,MAAK,SAACwE,GACzBC,EAAeD,MH1EZzE,MAAM,GAAD,OAAIH,EAAJ,uCAAkDI,MAAK,SAACC,GAAD,OACjEA,EAAIC,UG2EOF,MAAK,SAAC2E,GACf,IAAMC,EACJD,EAAME,OHjFO,IGiFY,EACrBF,EAAME,OHlFG,EGmFTC,KAAKC,KAAKJ,EAAME,OHnFP,GGoFfP,EAAcU,MAAMC,KAAK,CAAEJ,OAAQD,IAAS,SAACM,EAAGC,GAAJ,OAAUA,EAAI,WAE3D,CAACrF,IAGF,eAACoD,EAAD,WACGsB,EAAYY,KAAI,SAACvB,GAAD,OACf,cAACD,EAAD,CAAoBC,KAAMA,GAAfA,EAAKE,OAElB,cAACR,EAAD,UACGc,EAAWe,KAAI,SAACC,GAAD,OACd,cAAC7B,EAAD,CAEEG,QAAS7D,IAASuF,EAClBC,QAAS,YA9BM,SAACD,GACxBxF,EAAewF,GAAGrF,MAAK,SAACwE,GACtBC,EAAeD,GACfD,EAAQc,MA4BAE,CAAiBF,IAJrB,SAOGA,GANIA,WC3FjB,I,EAQaG,EAAcjF,YAAY,CACrCC,KAAM,QACNC,aAVmB,CACnBgF,eAAe,EACf5B,KAAM,GAEN6B,gBAAiB,KACjBC,iBAAkB,MAMlBhF,SAAU,CACRiF,iBAAkB,SAAC/E,EAAOC,GACxBD,EAAM4E,cAAgB3E,EAAOC,SAE/B8E,QAAS,SAAChF,EAAOC,GACfD,EAAMgD,KAAO/C,EAAOC,SAEtB+E,mBAAoB,SAACjF,EAAOC,GAC1BD,EAAM6E,gBAAkB5E,EAAOC,YAM9B,EACLyE,EAAYxE,QADC4E,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,QAASC,EAAnC,EAAmCA,mBAG7BC,EAAU,SAAChC,GAAD,OAAQ,SAAC1C,GAC9BA,EAASuE,GAAiB,IJpBL,SAAC7B,GACtB,OAAOhE,MAAM,GAAD,OAAIH,EAAJ,kBAAsBmE,IAAM/D,MAAK,SAACC,GAAD,OAASA,EAAIC,UIoB1D8F,CAAWjC,GAAI/D,MAAK,SAACC,GACnBoB,EAASwE,EAAQ5F,IACjBoB,EAASuE,GAAiB,SAIjBK,EAAU,SAACjC,EAAO5B,GAAR,OAAiB,SAACf,GACvCA,EAASuE,GAAiB,IJYL,SAAC5B,EAAO5B,GAC7B,IAAM7C,EAAQG,IACd,OAAOK,MAAM,GAAD,OAAIH,EAAJ,UAAsB,CAChCuC,OAAQ,OACR/B,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYd,IAE3B6C,KAAMC,KAAKC,UAAU,CACnB0B,QACA5B,WAEDpC,MAAK,SAACC,GAAD,OAASA,EAAIC,UIvBrBgG,CAAQlC,EAAO5B,GAAMpC,MAAK,SAACC,GACzBoB,EAASyE,EAAmB7F,IAC5BoB,EAASuE,GAAiB,SAIjBO,EAAW,SAACpC,EAAIqC,EAAWC,GAAhB,OAA6B,SAAChF,GACpDA,EAASuE,GAAiB,IJ6BJ,SAAC7B,EAAIC,EAAO5B,GAClC,IAAM7C,EAAQG,IACd,OAAOK,MAAM,GAAD,OAAIH,EAAJ,kBAAsBmE,GAAM,CACtC5B,OAAQ,QACR/B,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYd,IAE3B6C,KAAMC,KAAKC,UAAU,CACnB0B,QACA5B,WAEDpC,MAAK,SAACC,GAAD,OAASA,EAAIC,UIxCrBoG,CAAYvC,EAAIqC,EAAWC,GAAUrG,MAAK,SAACC,GACzCoB,EAASwE,EAAQ5F,IACjBoB,EAASuE,GAAiB,SAIjBW,EAAa,SAACxC,GAAD,OAAQ,SAAC1C,GACjC,OJWwB,SAAC0C,GACzB,IAAMxE,EAAQG,IACd,OAAOK,MAAM,GAAD,OAAIH,EAAJ,kBAAsBmE,GAAM,CACtC5B,OAAQ,SACRqE,OAAQ,CACNnG,cAAc,UAAD,OAAYd,MAE1BS,MAAK,SAACC,GAAD,OAASA,EAAIC,UIlBduG,CAAc1C,GAAI/D,MAAK,SAACC,GAC7B,OAAOA,OAIIuF,IAAf,QC5De,SAASkB,IACtB,IAAQ3C,EAAO4C,cAAP5C,GACF1C,EAAWC,cACXQ,EAAUC,cACV8B,EAAO+C,aAAY,SAACC,GAAD,OAAWA,EAAMlC,MAAMd,QAC1CnD,EAAOkG,aAAY,SAACC,GAAD,OAAWA,EAAMnG,KAAKA,QAC/C,EAAkCa,oBAAS,GAA3C,mBAAOuF,EAAP,KAAkBC,EAAlB,KACA,EAAkCxF,mBAAS,IAA3C,mBAAO6E,EAAP,KAAkBY,EAAlB,KACA,EAAgCzF,mBAAS,IAAzC,mBAAO8E,EAAP,KAAiBY,EAAjB,KAEAvC,qBAAU,WACRrD,EAAS0E,EAAQhC,MAChB,CAACA,EAAI1C,IAER,IAMM6F,EAAiB,WACrBH,GAAcD,IAQhB,OACE,qCACGpG,GACC,qCACE,wBAAQ4E,QAAS,kBAnBA,SAACvB,GACxB1C,EAASkF,EAAWxC,IAAK/D,MAAK,SAACmH,GAC7BrF,EAAQe,KAAK,QAiBcuE,CAAiBrD,IAAxC,sCACA,wBAAQuB,QAAS4B,EAAjB,yCAGJ,6BAAKrD,EAAOA,EAAKG,MAAQ,KACzB,4BAAIH,EAAOA,EAAKzB,KAAO,KACvB,4BAAIyB,EAAO,IAAII,KAAKJ,EAAKK,WAAWC,iBAAmB,KACvD,yCAAYN,EAAOA,EAAKwD,OAAS,MAEhCP,GACC,gCACE,0DACA,iCACE,0DACA,uBACEhE,MAAOsD,EACPrD,SAAU,SAACd,GACT+E,EAAa/E,EAAEe,OAAOF,UAG1B,0DACA,0BACEA,MAAOuD,EACPtD,SAAU,SAACd,GACTgF,EAAYhF,EAAEe,OAAOF,UAGzB,yBAAQG,KAAK,SAASqC,QApCP,WACvBjE,EAAS8E,EAASpC,EAAIqC,EAAWC,IACjCU,GAAa,IAkCL,UACG,IADH,eAEK,OAEL,yBAAQ9D,KAAK,SAASqC,QAAS4B,EAA/B,UACG,IADH,eAEK,gBChEF,SAASI,IACtB,IAAMjG,EAAWC,cACXoE,EAAkBkB,aAAY,SAACC,GAAD,OAAWA,EAAMlC,MAAMe,mBAC3D,EAAkCnE,mBAAS,IAA3C,mBAAOgG,EAAP,KAAkBC,EAAlB,KACA,EAAgCjG,mBAAS,IAAzC,mBAAOkG,EAAP,KAAiBC,EAAjB,KACM5F,EAAUC,cACVrB,EAAOkG,aAAY,SAACC,GAAD,OAAWA,EAAMnG,KAAKA,QAsB/C,OAfAgE,qBAAU,WAIR,OAHIgB,GAAmBA,EAAgB3B,IACrCjC,EAAQe,KAAK,UAAY6C,EAAgB3B,IAEpC,WACL1C,EAASyE,EAAmB,UAE7B,CAACJ,EAAiB5D,EAAST,IAE9BqD,qBAAU,WACHhE,GACHoB,EAAQe,KAAK,OAEd,CAACnC,EAAMoB,IAGR,qCACE,0DACA,uBAAME,SAvBW,SAACC,GACpBA,EAAEC,iBACFb,EAAS4E,EAAQsB,EAAWE,KAqB1B,UACE,0DACA,uBACE3E,MAAOyE,EACPxE,SAAU,SAACd,GACTuF,EAAavF,EAAEe,OAAOF,UAG1B,0DACA,0BACEA,MAAO2E,EACP1E,SAAU,SAACd,GACTyF,EAAYzF,EAAEe,OAAOF,UAGzB,wBAAQG,KAAK,SAAb,kCCrDO,SAAS0E,IACtB,OACE,mCACE,gDCIN,I,kBAAM1G,GAAeC,IAAOC,IAAV,2CAGH,SAASC,KACtB,MAAgCG,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOqG,EAAP,KAAiBC,EAAjB,KACA,EAAgCtG,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwCJ,qBAAxC,mBAAOK,EAAP,KAAqBC,EAArB,KACMC,EAAUC,cACVV,EAAWC,cAqBjB,OACE,uBAAMU,SApBa,SAACC,GACpBA,EAAEC,iBACFL,EAAgB,MRAI,SAACL,EAAUoG,EAAUlG,GAC3C,OAAO3B,MAAM,GAAD,OAAIH,EAAJ,aAAyB,CACnCuC,OAAQ,OACR/B,QAAS,CACP,eAAgB,oBAElBgC,KAAMC,KAAKC,UAAU,CACnBd,WACAoG,WACAlG,eAED1B,MAAK,SAACC,GAAD,OAASA,EAAIC,UQVnB4H,CAAStG,EAAUoG,EAAUlG,GAAU1B,MAAK,SAACwC,GAC3C,GAAgB,IAAZA,EAAKC,GACP,OAAOZ,EAAgBW,EAAKE,SAE9BpD,EAAakD,EAAKjD,OAElBY,IAAQH,MAAK,SAAC2C,GACZ,GAAoB,IAAhBA,EAASF,GAEX,OADAnD,EAAa,MACNuC,EAAgBc,EAASC,YAElCvB,EAAST,EAAQ+B,EAASH,OAC1BV,EAAQe,KAAK,YAKjB,UACE,8CACA,4CACY,IACV,uBACEI,KAAK,OACLH,MAAOtB,EACPuB,SAAU,SAACd,GAAD,OAAOR,EAAYQ,EAAEe,OAAOF,aAG1C,4CACY,IACV,uBACEG,KAAK,OACLH,MAAO8E,EACP7E,SAAU,SAACd,GAAD,OAAO4F,EAAY5F,EAAEe,OAAOF,aAG1C,4CACY,IACV,uBACEG,KAAK,WACLH,MAAOpB,EACPqB,SAAU,SAACd,GAAD,OAAON,EAAYM,EAAEe,OAAOF,aAG1C,kDACClB,GAAgB,cAAC,GAAD,UAAeA,OC3DtC,I,GAAMmG,GAAkB7G,IAAOC,IAAV,qRAcf6G,GAAQ9G,IAAOC,IAAV,wEAKL8G,GAAa/G,IAAOC,IAAV,yFAKV+G,GAAMhH,YAAOmC,IAAPnC,CAAH,yOAWL,SAACwC,GAAD,OACAA,EAAMC,SAAN,6CAMEwE,GAAYjH,IAAOC,IAAV,yOAWX,SAACuC,GAAD,OACAA,EAAMC,SAAN,6CAMEyE,GAAgBlH,IAAOC,IAAV,+GAIf8G,IAKW,SAASI,KACtB,IAAMC,EAAWC,cACXzG,EAAUC,cACVV,EAAWC,cACXZ,EAAOkG,aAAY,SAACC,GAAD,OAAWA,EAAMnG,KAAKA,QAQ/C,OACE,eAACqH,GAAD,WACE,eAACK,GAAD,WACE,cAACJ,GAAD,+DACA,eAACC,GAAD,WACE,cAACC,GAAD,CAAKpE,GAAG,IAAIH,QAA+B,MAAtB2E,EAASE,SAA9B,0BAGC9H,GACC,cAACwH,GAAD,CAAKpE,GAAG,YAAYH,QAA+B,cAAtB2E,EAASE,SAAtC,4CAMN,eAACP,GAAD,WACE,cAACC,GAAD,CAAKpE,GAAG,SAASH,QAA+B,WAAtB2E,EAASE,SAAnC,0BAGC9H,GAAQ,cAACyH,GAAD,CAAW7C,QAzBL,WACnBhG,EAAa,IACb+B,EAAST,EAAQ,OACjBkB,EAAQe,KAAK,MAsBA,2BACPnC,GACA,cAACwH,GAAD,CAAKpE,GAAG,SAASH,QAA+B,WAAtB2E,EAASE,SAAnC,2BAIA9H,GACA,cAACwH,GAAD,CAAKpE,GAAG,YAAYH,QAA+B,cAAtB2E,EAASE,SAAtC,gCCpGV,IAAMtF,GAAOhC,IAAOC,IAAV,oDA2CKsH,OAvCf,WACE,IAAMpH,EAAWC,cASjB,OAPAoD,qBAAU,WACRvE,IAAQH,MAAK,SAAC2C,GACRA,EAASF,IACXpB,EAAST,EAAQ+B,EAASH,YAG7B,CAACnB,IAEF,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAACgH,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,IAAlB,SACE,cAACvE,EAAD,MAEF,cAAC,IAAD,CAAOsE,OAAK,EAACC,KAAK,aAAlB,SACE,cAACjC,EAAD,MAEF,cAAC,IAAD,CAAOiC,KAAK,SAAZ,SACE,cAACvH,EAAD,MAEF,cAAC,IAAD,CAAOuH,KAAK,YAAZ,SACE,cAACrB,EAAD,MAEF,cAAC,IAAD,CAAOqB,KAAK,SAAZ,SACE,cAAChB,EAAD,MAEF,cAAC,IAAD,CAAOgB,KAAK,YAAZ,SACE,cAAC,GAAD,eC7CC9B,GAAQ+B,YAAe,CAClCC,QAAS,CACPlE,MAAOa,EACP9E,KAAMJ,KCDVwI,IAASC,OACP,cAAC,IAAD,CAAUlC,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFmC,SAASC,eAAe,W","file":"static/js/main.c34cb446.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n","import { getAuthToken } from \"./utils.js\";\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const limit = 5;\n\nexport const getPosts = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n};\n\nexport const getPostsByPage = (page) => {\n  return fetch(\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=${page}&_limit=${limit}`\n  ).then((res) => res.json());\n};\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}`).then((res) => res.json());\n};\n\nexport const register = (username, nickname, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      nickname,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const addPost = (title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const deletePost = (id) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"DELETE\",\n    header: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const editPost = (id, title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  user: \"\",\n};\n\nexport const userReducer = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setUser } = userReducer.actions;\n\nexport default userReducer.reducer;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { login, getMe } from \"../../../WebAPI.js\";\nimport { setAuthToken } from \"../../../utils.js\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setUser } from \"../../../redux/reducers/userReducer\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrorMessage(null);\n    login(username, password).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null);\n          return setErrorMessage(response.toString());\n        }\n        dispatch(setUser(response.data));\n        history.push(\"/\");\n      });\n    });\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        username:{\" \"}\n        <input value={username} onChange={(e) => setUsername(e.target.value)} />\n      </div>\n      <div>\n        password:{\" \"}\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <button>登入</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { limit, getPosts, getPostsByPage } from \"../../../WebAPI\";\n\nconst Root = styled.div`\n  width: 80%;\n`;\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst Paginator = styled.div`\n  margin-top: 20px;\n  width: 100%\n  display: flex;\n`;\n\nconst PageButton = styled.button`\n  margin: 8px;\n  background: white;\n  width: 30px;\n  height: 30px;\n  border: 2px solid rgba(0, 12, 34, 0.2);\n  border-radius: 50%;\n  text-align: center;\n  font-weight: bold;\n  line-height: 1.8rem;\n  cursor: pointer;\n  ${(props) =>\n    props.$active &&\n    `\n    background: rgba(0, 12, 34, 0.2);\n    color: black;\n    `}\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function HomePage() {\n  const [totalPages, setTotalPages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [curretPosts, setCurretPosts] = useState([]);\n\n  const handlePageChange = (p) => {\n    getPostsByPage(p).then((curretPosts) => {\n      setCurretPosts(curretPosts);\n      setPage(p);\n    });\n  };\n\n  useEffect(() => {\n    getPostsByPage(page).then((curretPosts) => {\n      setCurretPosts(curretPosts);\n    });\n    getPosts().then((posts) => {\n      const pages =\n        posts.length % limit === 0\n          ? posts.length / limit\n          : Math.ceil(posts.length / limit);\n      setTotalPages(Array.from({ length: pages }, (v, i) => i + 1));\n    });\n  }, [page]);\n\n  return (\n    <Root>\n      {curretPosts.map((post) => (\n        <Post key={post.id} post={post}></Post>\n      ))}\n      <Paginator>\n        {totalPages.map((p) => (\n          <PageButton\n            key={p}\n            $active={page === p}\n            onClick={() => {\n              handlePageChange(p);\n            }}\n          >\n            {p}\n          </PageButton>\n        ))}\n      </Paginator>\n    </Root>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  getPost as getPostAPI,\n  addPost,\n  deletePost as deletePostAPI,\n  editPost as editPostAPI,\n} from \"../../WebAPI.js\";\n\nconst initialState = {\n  isLoadingPost: false,\n  post: {},\n\n  newPostResponse: null,\n  editPostResponse: null,\n};\n\nexport const postReducer = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {\n    setIsLoadingPost: (state, action) => {\n      state.isLoadingPost = action.payload;\n    },\n    setPost: (state, action) => {\n      state.post = action.payload;\n    },\n    setNewPostResponse: (state, action) => {\n      state.newPostResponse = action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setIsLoadingPost, setPost, setNewPostResponse } =\n  postReducer.actions;\n\nexport const getPost = (id) => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n  getPostAPI(id).then((res) => {\n    dispatch(setPost(res));\n    dispatch(setIsLoadingPost(false));\n  });\n};\n\nexport const newPost = (title, body) => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n  addPost(title, body).then((res) => {\n    dispatch(setNewPostResponse(res));\n    dispatch(setIsLoadingPost(false));\n  });\n};\n\nexport const editPost = (id, editTitle, editBody) => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n  editPostAPI(id, editTitle, editBody).then((res) => {\n    dispatch(setPost(res));\n    dispatch(setIsLoadingPost(false));\n  });\n};\n\nexport const deletePost = (id) => (dispatch) => {\n  return deletePostAPI(id).then((res) => {\n    return res;\n  });\n};\n\nexport default postReducer.reducer;\n","import React, { useEffect, useState } from \"react\";\nimport { editPost, deletePost } from \"../../../redux/reducers/postReducer\";\nimport { getPost } from \"../../../redux/reducers/postReducer\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function PostPage() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const post = useSelector((store) => store.posts.post);\n  const user = useSelector((store) => store.user.user);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editTitle, setEditTitle] = useState(\"\");\n  const [editBody, setEditBody] = useState(\"\");\n\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id, dispatch]);\n\n  const handleDeletePost = (id) => {\n    dispatch(deletePost(id)).then((deleteRes) => {\n      history.push(\"/\");\n    });\n  };\n\n  const toggleEditArea = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const handleEditSubmit = () => {\n    dispatch(editPost(id, editTitle, editBody));\n    setIsEditing(false);\n  };\n\n  return (\n    <>\n      {user && (\n        <>\n          <button onClick={() => handleDeletePost(id)}>刪除文章</button>\n          <button onClick={toggleEditArea}>編輯文章</button>\n        </>\n      )}\n      <h2>{post ? post.title : \"\"}</h2>\n      <p>{post ? post.body : \"\"}</p>\n      <p>{post ? new Date(post.createdAt).toLocaleString() : \"\"}</p>\n      <p>author: {post ? post.userId : \"\"}</p>\n\n      {isEditing && (\n        <div>\n          <h2>編輯文章</h2>\n          <form>\n            <h3>文章標題</h3>\n            <input\n              value={editTitle}\n              onChange={(e) => {\n                setEditTitle(e.target.value);\n              }}\n            />\n            <h3>文章內容</h3>\n            <textarea\n              value={editBody}\n              onChange={(e) => {\n                setEditBody(e.target.value);\n              }}\n            />\n            <button type=\"button\" onClick={handleEditSubmit}>\n              {\" \"}\n              送出{\" \"}\n            </button>\n            <button type=\"button\" onClick={toggleEditArea}>\n              {\" \"}\n              取消{\" \"}\n            </button>\n          </form>\n        </div>\n      )}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  newPost,\n  setNewPostResponse,\n} from \"../../../redux/reducers/postReducer\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function AddPage() {\n  const dispatch = useDispatch();\n  const newPostResponse = useSelector((store) => store.posts.newPostResponse);\n  const [postTitle, setPostTitle] = useState(\"\");\n  const [postBody, setPostBody] = useState(\"\");\n  const history = useHistory();\n  const user = useSelector((store) => store.user.user);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(newPost(postTitle, postBody));\n  };\n\n  useEffect(() => {\n    if (newPostResponse && newPostResponse.id) {\n      history.push(\"/posts/\" + newPostResponse.id);\n    }\n    return () => {\n      dispatch(setNewPostResponse(null));\n    };\n  }, [newPostResponse, history, dispatch]);\n\n  useEffect(() => {\n    if (!user) {\n      history.push(\"/\");\n    }\n  }, [user, history]);\n\n  return (\n    <>\n      <h2>新增文章</h2>\n      <form onSubmit={handleSubmit}>\n        <h3>文章標題</h3>\n        <input\n          value={postTitle}\n          onChange={(e) => {\n            setPostTitle(e.target.value);\n          }}\n        />\n        <h3>文章內容</h3>\n        <textarea\n          value={postBody}\n          onChange={(e) => {\n            setPostBody(e.target.value);\n          }}\n        />\n        <button type=\"submit\"> 送出 </button>\n      </form>\n    </>\n  );\n}\n","import React from \"react\";\nexport default function AboutPage() {\n  return (\n    <>\n      <p>About me~~~~~</p>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { register, getMe } from \"../../../WebAPI.js\";\nimport { setAuthToken } from \"../../../utils.js\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setUser } from \"../../../redux/reducers/userReducer\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\nexport default function LoginPage() {\n  const [username, setUsername] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrorMessage(null);\n    register(username, nickname, password).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null);\n          return setErrorMessage(response.toString());\n        }\n        dispatch(setUser(response.data));\n        history.push(\"/\");\n      });\n    });\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>註冊</h3>\n      <div>\n        username:{\" \"}\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </div>\n      <div>\n        nickname:{\" \"}\n        <input\n          type=\"text\"\n          value={nickname}\n          onChange={(e) => setNickname(e.target.value)}\n        />\n      </div>\n      <div>\n        password:{\" \"}\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <button>送出</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </form>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { setAuthToken } from \"../../utils.js\";\nimport { setUser } from \"../../redux/reducers/userReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst HeaderContainer = styled.div`\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0px 32px;\n  box-sizing: border-box;\n`;\n\nconst Brand = styled.div`\n  font-size: 32px;\n  font-weight: bold;\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n  height: 64px;\n`;\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100px;\n  box-sizing: border-box;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n\n  ${(props) =>\n    props.$active &&\n    `\n    background: rgba(0,0,0,0.1)\n    `}\n`;\n\nconst LogoutNav = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100px;\n  box-sizing: border-box;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n\n  ${(props) =>\n    props.$active &&\n    `\n    background: rgba(0,0,0,0.1)\n    `}\n`;\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${NavbarList} {\n    margin-left: 64px;\n  }\n`;\n\nexport default function Header() {\n  const location = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector((store) => store.user.user);\n\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    dispatch(setUser(null));\n    history.push(\"/\");\n  };\n\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand>我的第一個部落格</Brand>\n        <NavbarList>\n          <Nav to=\"/\" $active={location.pathname === \"/\"}>\n            首頁\n          </Nav>\n          {user && (\n            <Nav to=\"/new-post\" $active={location.pathname === \"/new-post\"}>\n              發布文章\n            </Nav>\n          )}\n        </NavbarList>\n      </LeftContainer>\n      <NavbarList>\n        <Nav to=\"/about\" $active={location.pathname === \"/about\"}>\n          關於\n        </Nav>\n        {user && <LogoutNav onClick={handleLogout}>登出</LogoutNav>}\n        {!user && (\n          <Nav to=\"/login\" $active={location.pathname === \"/login\"}>\n            登入\n          </Nav>\n        )}\n        {!user && (\n          <Nav to=\"/register\" $active={location.pathname === \"/register\"}>\n            註冊\n          </Nav>\n        )}\n      </NavbarList>\n    </HeaderContainer>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport LoginPage from \"../pages/LoginPage\";\nimport HomePage from \"../pages/HomePage\";\nimport PostPage from \"../pages/PostPage\";\nimport AddPage from \"../pages/AddPage\";\nimport AboutPage from \"../pages/AboutPage\";\nimport RegisterPage from \"../pages/RegisterPage\";\nimport Header from \"../Header\";\nimport { getMe } from \"../../WebAPI.js\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setUser } from \"../../redux/reducers/userReducer\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getMe().then((response) => {\n      if (response.ok) {\n        dispatch(setUser(response.data));\n      }\n    });\n  }, [dispatch]);\n  return (\n    <Root>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route exact path=\"/posts/:id\">\n            <PostPage />\n          </Route>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route path=\"/new-post\">\n            <AddPage />\n          </Route>\n          <Route path=\"/about\">\n            <AboutPage />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterPage />\n          </Route>\n        </Switch>\n      </Router>\n    </Root>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport postReducer from \"./reducers/postReducer\";\nimport userReducer from \"./reducers/userReducer\";\n\nexport const store = configureStore({\n  reducer: {\n    posts: postReducer,\n    user: userReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}